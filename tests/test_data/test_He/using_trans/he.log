Structure 0
Full Formula (He1)
Reduced Formula: He
abc   :   4.000000   4.000000   4.000000
angles:  90.000000  90.000000  90.000000
Sites (1)
  #  SP      a    b      c
---  ----  ---  ---  -----
  0  He      0    0  -0.05

Abinit Spacegroup: spgid: 0, num_spatial_symmetries: 48, has_timerev: False, symmorphic: True
Structure 1
Full Formula (He1)
Reduced Formula: He
abc   :   4.000000   4.000000   4.000000
angles:  90.000000  90.000000  90.000000
Sites (1)
  #  SP      a    b     c
---  ----  ---  ---  ----
  0  He      0    0  0.05

Abinit Spacegroup: spgid: 0, num_spatial_symmetries: 48, has_timerev: False, symmorphic: True
finding real space translation along [0 0 1]
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
(array([0.10003125]), -0.9999999785258482, array([-0.2 , -0.12, -0.04,  0.04,  0.12,  0.2 ]), array([-0.26175212, -0.44546186, -0.69104762, -0.92920831, -0.99174561,
       -0.8207731 ]))
Will translate first wfk by [0.         0.         0.10003125]
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
translating [-0.167, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, -0.167, +0.833]
all translated
translating [-0.167, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, -0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [-0.167, -0.167, -0.167], weight: 0.037->[-0.167, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [-0.167, -0.167, -0.167], weight: 0.037->[-0.167, -0.167, +0.167], weight: 0.037 finished
wfk0, [-0.167, -0.167, +0.167], weight: 0.037->[-0.167, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [-0.167, -0.167, +0.167], weight: 0.037->[-0.167, -0.167, +0.500], weight: 0.037 finished
wfk0, [-0.167, -0.167, +0.500], weight: 0.037->[-0.167, -0.167, +0.833] starting
	 0/1
wfk0, [-0.167, -0.167, +0.500], weight: 0.037->[-0.167, -0.167, +0.833] finished
wfk1, [-0.167, -0.167, -0.167], weight: 0.037->[-0.167, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [-0.167, -0.167, -0.167], weight: 0.037->[-0.167, -0.167, +0.167], weight: 0.037 finished
wfk1, [-0.167, -0.167, +0.167], weight: 0.037->[-0.167, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [-0.167, -0.167, +0.167], weight: 0.037->[-0.167, -0.167, +0.500], weight: 0.037 finished
wfk1, [-0.167, -0.167, +0.500], weight: 0.037->[-0.167, -0.167, +0.833] starting
	 0/1
wfk1, [-0.167, -0.167, +0.500], weight: 0.037->[-0.167, -0.167, +0.833] finished
translating [-0.167, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, +0.167, +0.833]
all translated
translating [-0.167, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, +0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [-0.167, +0.167, -0.167], weight: 0.037->[-0.167, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [-0.167, +0.167, -0.167], weight: 0.037->[-0.167, +0.167, +0.167], weight: 0.037 finished
wfk0, [-0.167, +0.167, +0.167], weight: 0.037->[-0.167, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [-0.167, +0.167, +0.167], weight: 0.037->[-0.167, +0.167, +0.500], weight: 0.037 finished
wfk0, [-0.167, +0.167, +0.500], weight: 0.037->[-0.167, +0.167, +0.833] starting
	 0/1
wfk0, [-0.167, +0.167, +0.500], weight: 0.037->[-0.167, +0.167, +0.833] finished
wfk1, [-0.167, +0.167, -0.167], weight: 0.037->[-0.167, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [-0.167, +0.167, -0.167], weight: 0.037->[-0.167, +0.167, +0.167], weight: 0.037 finished
wfk1, [-0.167, +0.167, +0.167], weight: 0.037->[-0.167, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [-0.167, +0.167, +0.167], weight: 0.037->[-0.167, +0.167, +0.500], weight: 0.037 finished
wfk1, [-0.167, +0.167, +0.500], weight: 0.037->[-0.167, +0.167, +0.833] starting
	 0/1
wfk1, [-0.167, +0.167, +0.500], weight: 0.037->[-0.167, +0.167, +0.833] finished
translating [-0.167, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, +0.500, +0.833]
all translated
translating [-0.167, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, +0.500, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [-0.167, +0.500, -0.167], weight: 0.037->[-0.167, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk0, [-0.167, +0.500, -0.167], weight: 0.037->[-0.167, +0.500, +0.167], weight: 0.037 finished
wfk0, [-0.167, +0.500, +0.167], weight: 0.037->[-0.167, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk0, [-0.167, +0.500, +0.167], weight: 0.037->[-0.167, +0.500, +0.500], weight: 0.037 finished
wfk0, [-0.167, +0.500, +0.500], weight: 0.037->[-0.167, +0.500, +0.833] starting
	 0/1
wfk0, [-0.167, +0.500, +0.500], weight: 0.037->[-0.167, +0.500, +0.833] finished
wfk1, [-0.167, +0.500, -0.167], weight: 0.037->[-0.167, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk1, [-0.167, +0.500, -0.167], weight: 0.037->[-0.167, +0.500, +0.167], weight: 0.037 finished
wfk1, [-0.167, +0.500, +0.167], weight: 0.037->[-0.167, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk1, [-0.167, +0.500, +0.167], weight: 0.037->[-0.167, +0.500, +0.500], weight: 0.037 finished
wfk1, [-0.167, +0.500, +0.500], weight: 0.037->[-0.167, +0.500, +0.833] starting
	 0/1
wfk1, [-0.167, +0.500, +0.500], weight: 0.037->[-0.167, +0.500, +0.833] finished
translating [+0.167, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, -0.167, +0.833]
all translated
translating [+0.167, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, -0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.167, -0.167, -0.167], weight: 0.037->[+0.167, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.167, -0.167, -0.167], weight: 0.037->[+0.167, -0.167, +0.167], weight: 0.037 finished
wfk0, [+0.167, -0.167, +0.167], weight: 0.037->[+0.167, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.167, -0.167, +0.167], weight: 0.037->[+0.167, -0.167, +0.500], weight: 0.037 finished
wfk0, [+0.167, -0.167, +0.500], weight: 0.037->[+0.167, -0.167, +0.833] starting
	 0/1
wfk0, [+0.167, -0.167, +0.500], weight: 0.037->[+0.167, -0.167, +0.833] finished
wfk1, [+0.167, -0.167, -0.167], weight: 0.037->[+0.167, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.167, -0.167, -0.167], weight: 0.037->[+0.167, -0.167, +0.167], weight: 0.037 finished
wfk1, [+0.167, -0.167, +0.167], weight: 0.037->[+0.167, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.167, -0.167, +0.167], weight: 0.037->[+0.167, -0.167, +0.500], weight: 0.037 finished
wfk1, [+0.167, -0.167, +0.500], weight: 0.037->[+0.167, -0.167, +0.833] starting
	 0/1
wfk1, [+0.167, -0.167, +0.500], weight: 0.037->[+0.167, -0.167, +0.833] finished
translating [+0.167, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, +0.167, +0.833]
all translated
translating [+0.167, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, +0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.167, +0.167, -0.167], weight: 0.037->[+0.167, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.167, +0.167, -0.167], weight: 0.037->[+0.167, +0.167, +0.167], weight: 0.037 finished
wfk0, [+0.167, +0.167, +0.167], weight: 0.037->[+0.167, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.167, +0.167, +0.167], weight: 0.037->[+0.167, +0.167, +0.500], weight: 0.037 finished
wfk0, [+0.167, +0.167, +0.500], weight: 0.037->[+0.167, +0.167, +0.833] starting
	 0/1
wfk0, [+0.167, +0.167, +0.500], weight: 0.037->[+0.167, +0.167, +0.833] finished
wfk1, [+0.167, +0.167, -0.167], weight: 0.037->[+0.167, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.167, +0.167, -0.167], weight: 0.037->[+0.167, +0.167, +0.167], weight: 0.037 finished
wfk1, [+0.167, +0.167, +0.167], weight: 0.037->[+0.167, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.167, +0.167, +0.167], weight: 0.037->[+0.167, +0.167, +0.500], weight: 0.037 finished
wfk1, [+0.167, +0.167, +0.500], weight: 0.037->[+0.167, +0.167, +0.833] starting
	 0/1
wfk1, [+0.167, +0.167, +0.500], weight: 0.037->[+0.167, +0.167, +0.833] finished
translating [+0.167, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, +0.500, +0.833]
all translated
translating [+0.167, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, +0.500, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.167, +0.500, -0.167], weight: 0.037->[+0.167, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.167, +0.500, -0.167], weight: 0.037->[+0.167, +0.500, +0.167], weight: 0.037 finished
wfk0, [+0.167, +0.500, +0.167], weight: 0.037->[+0.167, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.167, +0.500, +0.167], weight: 0.037->[+0.167, +0.500, +0.500], weight: 0.037 finished
wfk0, [+0.167, +0.500, +0.500], weight: 0.037->[+0.167, +0.500, +0.833] starting
	 0/1
wfk0, [+0.167, +0.500, +0.500], weight: 0.037->[+0.167, +0.500, +0.833] finished
wfk1, [+0.167, +0.500, -0.167], weight: 0.037->[+0.167, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.167, +0.500, -0.167], weight: 0.037->[+0.167, +0.500, +0.167], weight: 0.037 finished
wfk1, [+0.167, +0.500, +0.167], weight: 0.037->[+0.167, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.167, +0.500, +0.167], weight: 0.037->[+0.167, +0.500, +0.500], weight: 0.037 finished
wfk1, [+0.167, +0.500, +0.500], weight: 0.037->[+0.167, +0.500, +0.833] starting
	 0/1
wfk1, [+0.167, +0.500, +0.500], weight: 0.037->[+0.167, +0.500, +0.833] finished
translating [+0.500, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, -0.167, +0.833]
all translated
translating [+0.500, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, -0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.500, -0.167, -0.167], weight: 0.037->[+0.500, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.500, -0.167, -0.167], weight: 0.037->[+0.500, -0.167, +0.167], weight: 0.037 finished
wfk0, [+0.500, -0.167, +0.167], weight: 0.037->[+0.500, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.500, -0.167, +0.167], weight: 0.037->[+0.500, -0.167, +0.500], weight: 0.037 finished
wfk0, [+0.500, -0.167, +0.500], weight: 0.037->[+0.500, -0.167, +0.833] starting
	 0/1
wfk0, [+0.500, -0.167, +0.500], weight: 0.037->[+0.500, -0.167, +0.833] finished
wfk1, [+0.500, -0.167, -0.167], weight: 0.037->[+0.500, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.500, -0.167, -0.167], weight: 0.037->[+0.500, -0.167, +0.167], weight: 0.037 finished
wfk1, [+0.500, -0.167, +0.167], weight: 0.037->[+0.500, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.500, -0.167, +0.167], weight: 0.037->[+0.500, -0.167, +0.500], weight: 0.037 finished
wfk1, [+0.500, -0.167, +0.500], weight: 0.037->[+0.500, -0.167, +0.833] starting
	 0/1
wfk1, [+0.500, -0.167, +0.500], weight: 0.037->[+0.500, -0.167, +0.833] finished
translating [+0.500, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, +0.167, +0.833]
all translated
translating [+0.500, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, +0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.500, +0.167, -0.167], weight: 0.037->[+0.500, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.500, +0.167, -0.167], weight: 0.037->[+0.500, +0.167, +0.167], weight: 0.037 finished
wfk0, [+0.500, +0.167, +0.167], weight: 0.037->[+0.500, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.500, +0.167, +0.167], weight: 0.037->[+0.500, +0.167, +0.500], weight: 0.037 finished
wfk0, [+0.500, +0.167, +0.500], weight: 0.037->[+0.500, +0.167, +0.833] starting
	 0/1
wfk0, [+0.500, +0.167, +0.500], weight: 0.037->[+0.500, +0.167, +0.833] finished
wfk1, [+0.500, +0.167, -0.167], weight: 0.037->[+0.500, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.500, +0.167, -0.167], weight: 0.037->[+0.500, +0.167, +0.167], weight: 0.037 finished
wfk1, [+0.500, +0.167, +0.167], weight: 0.037->[+0.500, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.500, +0.167, +0.167], weight: 0.037->[+0.500, +0.167, +0.500], weight: 0.037 finished
wfk1, [+0.500, +0.167, +0.500], weight: 0.037->[+0.500, +0.167, +0.833] starting
	 0/1
wfk1, [+0.500, +0.167, +0.500], weight: 0.037->[+0.500, +0.167, +0.833] finished
translating [+0.500, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, +0.500, +0.833]
all translated
translating [+0.500, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, +0.500, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.500, +0.500, -0.167], weight: 0.037->[+0.500, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.500, +0.500, -0.167], weight: 0.037->[+0.500, +0.500, +0.167], weight: 0.037 finished
wfk0, [+0.500, +0.500, +0.167], weight: 0.037->[+0.500, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.500, +0.500, +0.167], weight: 0.037->[+0.500, +0.500, +0.500], weight: 0.037 finished
wfk0, [+0.500, +0.500, +0.500], weight: 0.037->[+0.500, +0.500, +0.833] starting
	 0/1
wfk0, [+0.500, +0.500, +0.500], weight: 0.037->[+0.500, +0.500, +0.833] finished
wfk1, [+0.500, +0.500, -0.167], weight: 0.037->[+0.500, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.500, +0.500, -0.167], weight: 0.037->[+0.500, +0.500, +0.167], weight: 0.037 finished
wfk1, [+0.500, +0.500, +0.167], weight: 0.037->[+0.500, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.500, +0.500, +0.167], weight: 0.037->[+0.500, +0.500, +0.500], weight: 0.037 finished
wfk1, [+0.500, +0.500, +0.500], weight: 0.037->[+0.500, +0.500, +0.833] starting
	 0/1
wfk1, [+0.500, +0.500, +0.500], weight: 0.037->[+0.500, +0.500, +0.833] finished
time info: 0.8084609508514404 seconds to compute all overlaps
states (0, [-0.167, -0.167, -0.167]) -> (1, [-0.167, -0.167, -0.167])
min singular value: 0.9999999801123847
states (1, [-0.167, -0.167, -0.167]) -> (1, [-0.167, -0.167, +0.167])
min singular value: 0.9835595155120307
states (1, [-0.167, -0.167, +0.167]) -> (0, [-0.167, -0.167, +0.167])
min singular value: 0.9999999801123847
states (0, [-0.167, -0.167, +0.167]) -> (0, [-0.167, -0.167, -0.167])
min singular value: 0.9835595155120681
loop eigenvalues:
[9.65795273e-06]
states (0, [-0.167, -0.167, +0.167]) -> (1, [-0.167, -0.167, +0.167])
min singular value: 0.9999999801123847
states (1, [-0.167, -0.167, +0.167]) -> (1, [-0.167, -0.167, +0.500])
min singular value: 0.9814744912542014
states (1, [-0.167, -0.167, +0.500]) -> (0, [-0.167, -0.167, +0.500])
min singular value: 0.9999999797966708
states (0, [-0.167, -0.167, +0.500]) -> (0, [-0.167, -0.167, +0.167])
min singular value: 0.9814744912543608
loop eigenvalues:
[9.5207351e-06]
states (0, [-0.167, -0.167, +0.500]) -> (1, [-0.167, -0.167, +0.500])
min singular value: 0.9999999797966708
states (1, [-0.167, -0.167, +0.500]) -> (1, [-0.167, -0.167, +0.833])
min singular value: 0.9814744912542018
states (1, [-0.167, -0.167, +0.833]) -> (0, [-0.167, -0.167, +0.833])
min singular value: 0.9999999801123847
states (0, [-0.167, -0.167, +0.833]) -> (0, [-0.167, -0.167, +0.500])
min singular value: 0.9814744912543608
loop eigenvalues:
[9.5207351e-06]
states (0, [-0.167, +0.167, -0.167]) -> (1, [-0.167, +0.167, -0.167])
min singular value: 0.9999999801123847
states (1, [-0.167, +0.167, -0.167]) -> (1, [-0.167, +0.167, +0.167])
min singular value: 0.9835595155120304
states (1, [-0.167, +0.167, +0.167]) -> (0, [-0.167, +0.167, +0.167])
min singular value: 0.9999999801123846
states (0, [-0.167, +0.167, +0.167]) -> (0, [-0.167, +0.167, -0.167])
min singular value: 0.9835595155120682
loop eigenvalues:
[9.65795273e-06]
states (0, [-0.167, +0.167, +0.167]) -> (1, [-0.167, +0.167, +0.167])
min singular value: 0.9999999801123846
states (1, [-0.167, +0.167, +0.167]) -> (1, [-0.167, +0.167, +0.500])
min singular value: 0.9814744912542008
states (1, [-0.167, +0.167, +0.500]) -> (0, [-0.167, +0.167, +0.500])
min singular value: 0.9999999797966709
states (0, [-0.167, +0.167, +0.500]) -> (0, [-0.167, +0.167, +0.167])
min singular value: 0.9814744912543608
loop eigenvalues:
[9.5207351e-06]
states (0, [-0.167, +0.167, +0.500]) -> (1, [-0.167, +0.167, +0.500])
min singular value: 0.9999999797966709
states (1, [-0.167, +0.167, +0.500]) -> (1, [-0.167, +0.167, +0.833])
min singular value: 0.9814744912542015
states (1, [-0.167, +0.167, +0.833]) -> (0, [-0.167, +0.167, +0.833])
min singular value: 0.9999999801123847
states (0, [-0.167, +0.167, +0.833]) -> (0, [-0.167, +0.167, +0.500])
min singular value: 0.9814744912543611
loop eigenvalues:
[9.5207351e-06]
states (0, [-0.167, +0.500, -0.167]) -> (1, [-0.167, +0.500, -0.167])
min singular value: 0.9999999802234983
states (1, [-0.167, +0.500, -0.167]) -> (1, [-0.167, +0.500, +0.167])
min singular value: 0.983564184663554
states (1, [-0.167, +0.500, +0.167]) -> (0, [-0.167, +0.500, +0.167])
min singular value: 0.9999999802234978
states (0, [-0.167, +0.500, +0.167]) -> (0, [-0.167, +0.500, -0.167])
min singular value: 0.9835641846635922
loop eigenvalues:
[9.62216317e-06]
states (0, [-0.167, +0.500, +0.167]) -> (1, [-0.167, +0.500, +0.167])
min singular value: 0.9999999802234978
states (1, [-0.167, +0.500, +0.167]) -> (1, [-0.167, +0.500, +0.500])
min singular value: 0.9816732097440629
states (1, [-0.167, +0.500, +0.500]) -> (0, [-0.167, +0.500, +0.500])
min singular value: 0.9999999793727826
states (0, [-0.167, +0.500, +0.500]) -> (0, [-0.167, +0.500, +0.167])
min singular value: 0.9816732097441547
loop eigenvalues:
[9.46299872e-06]
states (0, [-0.167, +0.500, +0.500]) -> (1, [-0.167, +0.500, +0.500])
min singular value: 0.9999999793727826
states (1, [-0.167, +0.500, +0.500]) -> (1, [-0.167, +0.500, +0.833])
min singular value: 0.9816732097440634
states (1, [-0.167, +0.500, +0.833]) -> (0, [-0.167, +0.500, +0.833])
min singular value: 0.9999999802234983
states (0, [-0.167, +0.500, +0.833]) -> (0, [-0.167, +0.500, +0.500])
min singular value: 0.9816732097441547
loop eigenvalues:
[9.46299872e-06]
states (0, [+0.167, -0.167, -0.167]) -> (1, [+0.167, -0.167, -0.167])
min singular value: 0.9999999801123847
states (1, [+0.167, -0.167, -0.167]) -> (1, [+0.167, -0.167, +0.167])
min singular value: 0.9835595155120307
states (1, [+0.167, -0.167, +0.167]) -> (0, [+0.167, -0.167, +0.167])
min singular value: 0.9999999801123847
states (0, [+0.167, -0.167, +0.167]) -> (0, [+0.167, -0.167, -0.167])
min singular value: 0.9835595155120679
loop eigenvalues:
[9.65795273e-06]
states (0, [+0.167, -0.167, +0.167]) -> (1, [+0.167, -0.167, +0.167])
min singular value: 0.9999999801123847
states (1, [+0.167, -0.167, +0.167]) -> (1, [+0.167, -0.167, +0.500])
min singular value: 0.9814744912542017
states (1, [+0.167, -0.167, +0.500]) -> (0, [+0.167, -0.167, +0.500])
min singular value: 0.9999999797966709
states (0, [+0.167, -0.167, +0.500]) -> (0, [+0.167, -0.167, +0.167])
min singular value: 0.9814744912543608
loop eigenvalues:
[9.5207351e-06]
states (0, [+0.167, -0.167, +0.500]) -> (1, [+0.167, -0.167, +0.500])
min singular value: 0.9999999797966709
states (1, [+0.167, -0.167, +0.500]) -> (1, [+0.167, -0.167, +0.833])
min singular value: 0.9814744912542012
states (1, [+0.167, -0.167, +0.833]) -> (0, [+0.167, -0.167, +0.833])
min singular value: 0.9999999801123847
states (0, [+0.167, -0.167, +0.833]) -> (0, [+0.167, -0.167, +0.500])
min singular value: 0.981474491254361
loop eigenvalues:
[9.5207351e-06]
states (0, [+0.167, +0.167, -0.167]) -> (1, [+0.167, +0.167, -0.167])
min singular value: 0.9999999801123849
states (1, [+0.167, +0.167, -0.167]) -> (1, [+0.167, +0.167, +0.167])
min singular value: 0.9835595155120306
states (1, [+0.167, +0.167, +0.167]) -> (0, [+0.167, +0.167, +0.167])
min singular value: 0.9999999801123847
states (0, [+0.167, +0.167, +0.167]) -> (0, [+0.167, +0.167, -0.167])
min singular value: 0.9835595155120683
loop eigenvalues:
[9.65795273e-06]
states (0, [+0.167, +0.167, +0.167]) -> (1, [+0.167, +0.167, +0.167])
min singular value: 0.9999999801123847
states (1, [+0.167, +0.167, +0.167]) -> (1, [+0.167, +0.167, +0.500])
min singular value: 0.9814744912542015
states (1, [+0.167, +0.167, +0.500]) -> (0, [+0.167, +0.167, +0.500])
min singular value: 0.999999979796671
states (0, [+0.167, +0.167, +0.500]) -> (0, [+0.167, +0.167, +0.167])
min singular value: 0.981474491254361
loop eigenvalues:
[9.5207351e-06]
states (0, [+0.167, +0.167, +0.500]) -> (1, [+0.167, +0.167, +0.500])
min singular value: 0.999999979796671
states (1, [+0.167, +0.167, +0.500]) -> (1, [+0.167, +0.167, +0.833])
min singular value: 0.9814744912542014
states (1, [+0.167, +0.167, +0.833]) -> (0, [+0.167, +0.167, +0.833])
min singular value: 0.9999999801123849
states (0, [+0.167, +0.167, +0.833]) -> (0, [+0.167, +0.167, +0.500])
min singular value: 0.9814744912543611
loop eigenvalues:
[9.5207351e-06]
states (0, [+0.167, +0.500, -0.167]) -> (1, [+0.167, +0.500, -0.167])
min singular value: 0.9999999802234976
states (1, [+0.167, +0.500, -0.167]) -> (1, [+0.167, +0.500, +0.167])
min singular value: 0.983564184663554
states (1, [+0.167, +0.500, +0.167]) -> (0, [+0.167, +0.500, +0.167])
min singular value: 0.9999999802234989
states (0, [+0.167, +0.500, +0.167]) -> (0, [+0.167, +0.500, -0.167])
min singular value: 0.9835641846635927
loop eigenvalues:
[9.62216317e-06]
states (0, [+0.167, +0.500, +0.167]) -> (1, [+0.167, +0.500, +0.167])
min singular value: 0.9999999802234989
states (1, [+0.167, +0.500, +0.167]) -> (1, [+0.167, +0.500, +0.500])
min singular value: 0.9816732097440635
states (1, [+0.167, +0.500, +0.500]) -> (0, [+0.167, +0.500, +0.500])
min singular value: 0.9999999793727834
states (0, [+0.167, +0.500, +0.500]) -> (0, [+0.167, +0.500, +0.167])
min singular value: 0.9816732097441552
loop eigenvalues:
[9.46299872e-06]
states (0, [+0.167, +0.500, +0.500]) -> (1, [+0.167, +0.500, +0.500])
min singular value: 0.9999999793727834
states (1, [+0.167, +0.500, +0.500]) -> (1, [+0.167, +0.500, +0.833])
min singular value: 0.9816732097440632
states (1, [+0.167, +0.500, +0.833]) -> (0, [+0.167, +0.500, +0.833])
min singular value: 0.9999999802234976
states (0, [+0.167, +0.500, +0.833]) -> (0, [+0.167, +0.500, +0.500])
min singular value: 0.981673209744155
loop eigenvalues:
[9.46299872e-06]
states (0, [+0.500, -0.167, -0.167]) -> (1, [+0.500, -0.167, -0.167])
min singular value: 0.9999999802234972
states (1, [+0.500, -0.167, -0.167]) -> (1, [+0.500, -0.167, +0.167])
min singular value: 0.9835641846635576
states (1, [+0.500, -0.167, +0.167]) -> (0, [+0.500, -0.167, +0.167])
min singular value: 0.9999999802234975
states (0, [+0.500, -0.167, +0.167]) -> (0, [+0.500, -0.167, -0.167])
min singular value: 0.9835641846635984
loop eigenvalues:
[9.62216317e-06]
states (0, [+0.500, -0.167, +0.167]) -> (1, [+0.500, -0.167, +0.167])
min singular value: 0.9999999802234975
states (1, [+0.500, -0.167, +0.167]) -> (1, [+0.500, -0.167, +0.500])
min singular value: 0.9816732097440687
states (1, [+0.500, -0.167, +0.500]) -> (0, [+0.500, -0.167, +0.500])
min singular value: 0.999999979372783
states (0, [+0.500, -0.167, +0.500]) -> (0, [+0.500, -0.167, +0.167])
min singular value: 0.9816732097441618
loop eigenvalues:
[9.46299872e-06]
states (0, [+0.500, -0.167, +0.500]) -> (1, [+0.500, -0.167, +0.500])
min singular value: 0.999999979372783
states (1, [+0.500, -0.167, +0.500]) -> (1, [+0.500, -0.167, +0.833])
min singular value: 0.9816732097440687
states (1, [+0.500, -0.167, +0.833]) -> (0, [+0.500, -0.167, +0.833])
min singular value: 0.9999999802234972
states (0, [+0.500, -0.167, +0.833]) -> (0, [+0.500, -0.167, +0.500])
min singular value: 0.9816732097441618
loop eigenvalues:
[9.46299872e-06]
states (0, [+0.500, +0.167, -0.167]) -> (1, [+0.500, +0.167, -0.167])
min singular value: 0.9999999802234971
states (1, [+0.500, +0.167, -0.167]) -> (1, [+0.500, +0.167, +0.167])
min singular value: 0.9835641846635576
states (1, [+0.500, +0.167, +0.167]) -> (0, [+0.500, +0.167, +0.167])
min singular value: 0.9999999802234973
states (0, [+0.500, +0.167, +0.167]) -> (0, [+0.500, +0.167, -0.167])
min singular value: 0.9835641846635984
loop eigenvalues:
[9.62216317e-06]
states (0, [+0.500, +0.167, +0.167]) -> (1, [+0.500, +0.167, +0.167])
min singular value: 0.9999999802234973
states (1, [+0.500, +0.167, +0.167]) -> (1, [+0.500, +0.167, +0.500])
min singular value: 0.9816732097440687
states (1, [+0.500, +0.167, +0.500]) -> (0, [+0.500, +0.167, +0.500])
min singular value: 0.9999999793727835
states (0, [+0.500, +0.167, +0.500]) -> (0, [+0.500, +0.167, +0.167])
min singular value: 0.9816732097441624
loop eigenvalues:
[9.46299872e-06]
states (0, [+0.500, +0.167, +0.500]) -> (1, [+0.500, +0.167, +0.500])
min singular value: 0.9999999793727835
states (1, [+0.500, +0.167, +0.500]) -> (1, [+0.500, +0.167, +0.833])
min singular value: 0.9816732097440684
states (1, [+0.500, +0.167, +0.833]) -> (0, [+0.500, +0.167, +0.833])
min singular value: 0.9999999802234971
states (0, [+0.500, +0.167, +0.833]) -> (0, [+0.500, +0.167, +0.500])
min singular value: 0.9816732097441623
loop eigenvalues:
[9.46299872e-06]
states (0, [+0.500, +0.500, -0.167]) -> (1, [+0.500, +0.500, -0.167])
min singular value: 0.9999999802336056
states (1, [+0.500, +0.500, -0.167]) -> (1, [+0.500, +0.500, +0.167])
min singular value: 0.9833441149999228
states (1, [+0.500, +0.500, +0.167]) -> (0, [+0.500, +0.500, +0.167])
min singular value: 0.9999999802336058
states (0, [+0.500, +0.500, +0.167]) -> (0, [+0.500, +0.500, -0.167])
min singular value: 0.9833441149999065
loop eigenvalues:
[9.72407181e-06]
states (0, [+0.500, +0.500, +0.167]) -> (1, [+0.500, +0.500, +0.167])
min singular value: 0.9999999802336058
states (1, [+0.500, +0.500, +0.167]) -> (1, [+0.500, +0.500, +0.500])
min singular value: 0.982134838344408
states (1, [+0.500, +0.500, +0.500]) -> (0, [+0.500, +0.500, +0.500])
min singular value: 0.9999999785258482
states (0, [+0.500, +0.500, +0.500]) -> (0, [+0.500, +0.500, +0.167])
min singular value: 0.9821348383445011
loop eigenvalues:
[9.27920934e-06]
states (0, [+0.500, +0.500, +0.500]) -> (1, [+0.500, +0.500, +0.500])
min singular value: 0.9999999785258482
states (1, [+0.500, +0.500, +0.500]) -> (1, [+0.500, +0.500, +0.833])
min singular value: 0.9821348383444075
states (1, [+0.500, +0.500, +0.833]) -> (0, [+0.500, +0.500, +0.833])
min singular value: 0.9999999802336056
states (0, [+0.500, +0.500, +0.833]) -> (0, [+0.500, +0.500, +0.500])
min singular value: 0.982134838344501
loop eigenvalues:
[9.27920934e-06]
time info: 0.15378475189208984 seconds to do all svds
-0.16666666666666682, -0.16666666666666682: 2.8699422938368444e-05
-0.16666666666666682, 0.16666666666666666: 2.8699422938386113e-05
-0.16666666666666682, 0.5: 2.8548160617018734e-05
0.16666666666666666, -0.16666666666666682: 2.869942293836623e-05
0.16666666666666666, 0.16666666666666666: 2.8699422938377277e-05
0.16666666666666666, 0.5: 2.8548160617016532e-05
0.5, -0.16666666666666682: 2.8548160617009898e-05
0.5, 0.16666666666666666: 2.854816061700327e-05
0.5, 0.5: 2.8282490490353003e-05
average across strings: 2.8585869412433277e-05
Finding ionic change in polarization
Displacements:
[[0.  0.  0.4]]
He	2.0	[0.  0.  0.4]
Electronic phase change: [0.0, 0.0, 5.717173882486655e-05]
Electronic polarization change: [0.00000000e+00 0.00000000e+00 5.72495399e-05]
Ionic polarization change: [ 0.0000000e+00  0.0000000e+00 -6.2585052e-05]
Final polarization = [ 0.00000000e+00  0.00000000e+00 -2.66775602e-06] C/m^2
time info: 2.737586736679077 seconds total
