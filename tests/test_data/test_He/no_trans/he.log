Structure 0
Full Formula (He1)
Reduced Formula: He
abc   :   4.000000   4.000000   4.000000
angles:  90.000000  90.000000  90.000000
Sites (1)
  #  SP      a    b      c
---  ----  ---  ---  -----
  0  He      0    0  -0.05

Abinit Spacegroup: spgid: 0, num_spatial_symmetries: 48, has_timerev: False, symmorphic: True
Structure 1
Full Formula (He1)
Reduced Formula: He
abc   :   4.000000   4.000000   4.000000
angles:  90.000000  90.000000  90.000000
Sites (1)
  #  SP      a    b     c
---  ----  ---  ---  ----
  0  He      0    0  0.05

Abinit Spacegroup: spgid: 0, num_spatial_symmetries: 48, has_timerev: False, symmorphic: True
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
	 0/1
translating [-0.167, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, -0.167, +0.833]
all translated
translating [-0.167, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, -0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [-0.167, -0.167, -0.167], weight: 0.037->[-0.167, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [-0.167, -0.167, -0.167], weight: 0.037->[-0.167, -0.167, +0.167], weight: 0.037 finished
wfk0, [-0.167, -0.167, +0.167], weight: 0.037->[-0.167, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [-0.167, -0.167, +0.167], weight: 0.037->[-0.167, -0.167, +0.500], weight: 0.037 finished
wfk0, [-0.167, -0.167, +0.500], weight: 0.037->[-0.167, -0.167, +0.833] starting
	 0/1
wfk0, [-0.167, -0.167, +0.500], weight: 0.037->[-0.167, -0.167, +0.833] finished
wfk1, [-0.167, -0.167, -0.167], weight: 0.037->[-0.167, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [-0.167, -0.167, -0.167], weight: 0.037->[-0.167, -0.167, +0.167], weight: 0.037 finished
wfk1, [-0.167, -0.167, +0.167], weight: 0.037->[-0.167, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [-0.167, -0.167, +0.167], weight: 0.037->[-0.167, -0.167, +0.500], weight: 0.037 finished
wfk1, [-0.167, -0.167, +0.500], weight: 0.037->[-0.167, -0.167, +0.833] starting
	 0/1
wfk1, [-0.167, -0.167, +0.500], weight: 0.037->[-0.167, -0.167, +0.833] finished
translating [-0.167, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, +0.167, +0.833]
all translated
translating [-0.167, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, +0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [-0.167, +0.167, -0.167], weight: 0.037->[-0.167, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [-0.167, +0.167, -0.167], weight: 0.037->[-0.167, +0.167, +0.167], weight: 0.037 finished
wfk0, [-0.167, +0.167, +0.167], weight: 0.037->[-0.167, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [-0.167, +0.167, +0.167], weight: 0.037->[-0.167, +0.167, +0.500], weight: 0.037 finished
wfk0, [-0.167, +0.167, +0.500], weight: 0.037->[-0.167, +0.167, +0.833] starting
	 0/1
wfk0, [-0.167, +0.167, +0.500], weight: 0.037->[-0.167, +0.167, +0.833] finished
wfk1, [-0.167, +0.167, -0.167], weight: 0.037->[-0.167, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [-0.167, +0.167, -0.167], weight: 0.037->[-0.167, +0.167, +0.167], weight: 0.037 finished
wfk1, [-0.167, +0.167, +0.167], weight: 0.037->[-0.167, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [-0.167, +0.167, +0.167], weight: 0.037->[-0.167, +0.167, +0.500], weight: 0.037 finished
wfk1, [-0.167, +0.167, +0.500], weight: 0.037->[-0.167, +0.167, +0.833] starting
	 0/1
wfk1, [-0.167, +0.167, +0.500], weight: 0.037->[-0.167, +0.167, +0.833] finished
translating [-0.167, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, +0.500, +0.833]
all translated
translating [-0.167, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [-0.167, +0.500, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [-0.167, +0.500, -0.167], weight: 0.037->[-0.167, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk0, [-0.167, +0.500, -0.167], weight: 0.037->[-0.167, +0.500, +0.167], weight: 0.037 finished
wfk0, [-0.167, +0.500, +0.167], weight: 0.037->[-0.167, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk0, [-0.167, +0.500, +0.167], weight: 0.037->[-0.167, +0.500, +0.500], weight: 0.037 finished
wfk0, [-0.167, +0.500, +0.500], weight: 0.037->[-0.167, +0.500, +0.833] starting
	 0/1
wfk0, [-0.167, +0.500, +0.500], weight: 0.037->[-0.167, +0.500, +0.833] finished
wfk1, [-0.167, +0.500, -0.167], weight: 0.037->[-0.167, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk1, [-0.167, +0.500, -0.167], weight: 0.037->[-0.167, +0.500, +0.167], weight: 0.037 finished
wfk1, [-0.167, +0.500, +0.167], weight: 0.037->[-0.167, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk1, [-0.167, +0.500, +0.167], weight: 0.037->[-0.167, +0.500, +0.500], weight: 0.037 finished
wfk1, [-0.167, +0.500, +0.500], weight: 0.037->[-0.167, +0.500, +0.833] starting
	 0/1
wfk1, [-0.167, +0.500, +0.500], weight: 0.037->[-0.167, +0.500, +0.833] finished
translating [+0.167, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, -0.167, +0.833]
all translated
translating [+0.167, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, -0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.167, -0.167, -0.167], weight: 0.037->[+0.167, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.167, -0.167, -0.167], weight: 0.037->[+0.167, -0.167, +0.167], weight: 0.037 finished
wfk0, [+0.167, -0.167, +0.167], weight: 0.037->[+0.167, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.167, -0.167, +0.167], weight: 0.037->[+0.167, -0.167, +0.500], weight: 0.037 finished
wfk0, [+0.167, -0.167, +0.500], weight: 0.037->[+0.167, -0.167, +0.833] starting
	 0/1
wfk0, [+0.167, -0.167, +0.500], weight: 0.037->[+0.167, -0.167, +0.833] finished
wfk1, [+0.167, -0.167, -0.167], weight: 0.037->[+0.167, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.167, -0.167, -0.167], weight: 0.037->[+0.167, -0.167, +0.167], weight: 0.037 finished
wfk1, [+0.167, -0.167, +0.167], weight: 0.037->[+0.167, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.167, -0.167, +0.167], weight: 0.037->[+0.167, -0.167, +0.500], weight: 0.037 finished
wfk1, [+0.167, -0.167, +0.500], weight: 0.037->[+0.167, -0.167, +0.833] starting
	 0/1
wfk1, [+0.167, -0.167, +0.500], weight: 0.037->[+0.167, -0.167, +0.833] finished
translating [+0.167, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, +0.167, +0.833]
all translated
translating [+0.167, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, +0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.167, +0.167, -0.167], weight: 0.037->[+0.167, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.167, +0.167, -0.167], weight: 0.037->[+0.167, +0.167, +0.167], weight: 0.037 finished
wfk0, [+0.167, +0.167, +0.167], weight: 0.037->[+0.167, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.167, +0.167, +0.167], weight: 0.037->[+0.167, +0.167, +0.500], weight: 0.037 finished
wfk0, [+0.167, +0.167, +0.500], weight: 0.037->[+0.167, +0.167, +0.833] starting
	 0/1
wfk0, [+0.167, +0.167, +0.500], weight: 0.037->[+0.167, +0.167, +0.833] finished
wfk1, [+0.167, +0.167, -0.167], weight: 0.037->[+0.167, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.167, +0.167, -0.167], weight: 0.037->[+0.167, +0.167, +0.167], weight: 0.037 finished
wfk1, [+0.167, +0.167, +0.167], weight: 0.037->[+0.167, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.167, +0.167, +0.167], weight: 0.037->[+0.167, +0.167, +0.500], weight: 0.037 finished
wfk1, [+0.167, +0.167, +0.500], weight: 0.037->[+0.167, +0.167, +0.833] starting
	 0/1
wfk1, [+0.167, +0.167, +0.500], weight: 0.037->[+0.167, +0.167, +0.833] finished
translating [+0.167, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, +0.500, +0.833]
all translated
translating [+0.167, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.167, +0.500, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.167, +0.500, -0.167], weight: 0.037->[+0.167, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.167, +0.500, -0.167], weight: 0.037->[+0.167, +0.500, +0.167], weight: 0.037 finished
wfk0, [+0.167, +0.500, +0.167], weight: 0.037->[+0.167, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.167, +0.500, +0.167], weight: 0.037->[+0.167, +0.500, +0.500], weight: 0.037 finished
wfk0, [+0.167, +0.500, +0.500], weight: 0.037->[+0.167, +0.500, +0.833] starting
	 0/1
wfk0, [+0.167, +0.500, +0.500], weight: 0.037->[+0.167, +0.500, +0.833] finished
wfk1, [+0.167, +0.500, -0.167], weight: 0.037->[+0.167, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.167, +0.500, -0.167], weight: 0.037->[+0.167, +0.500, +0.167], weight: 0.037 finished
wfk1, [+0.167, +0.500, +0.167], weight: 0.037->[+0.167, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.167, +0.500, +0.167], weight: 0.037->[+0.167, +0.500, +0.500], weight: 0.037 finished
wfk1, [+0.167, +0.500, +0.500], weight: 0.037->[+0.167, +0.500, +0.833] starting
	 0/1
wfk1, [+0.167, +0.500, +0.500], weight: 0.037->[+0.167, +0.500, +0.833] finished
translating [+0.500, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, -0.167, +0.833]
all translated
translating [+0.500, -0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, -0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.500, -0.167, -0.167], weight: 0.037->[+0.500, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.500, -0.167, -0.167], weight: 0.037->[+0.500, -0.167, +0.167], weight: 0.037 finished
wfk0, [+0.500, -0.167, +0.167], weight: 0.037->[+0.500, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.500, -0.167, +0.167], weight: 0.037->[+0.500, -0.167, +0.500], weight: 0.037 finished
wfk0, [+0.500, -0.167, +0.500], weight: 0.037->[+0.500, -0.167, +0.833] starting
	 0/1
wfk0, [+0.500, -0.167, +0.500], weight: 0.037->[+0.500, -0.167, +0.833] finished
wfk1, [+0.500, -0.167, -0.167], weight: 0.037->[+0.500, -0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.500, -0.167, -0.167], weight: 0.037->[+0.500, -0.167, +0.167], weight: 0.037 finished
wfk1, [+0.500, -0.167, +0.167], weight: 0.037->[+0.500, -0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.500, -0.167, +0.167], weight: 0.037->[+0.500, -0.167, +0.500], weight: 0.037 finished
wfk1, [+0.500, -0.167, +0.500], weight: 0.037->[+0.500, -0.167, +0.833] starting
	 0/1
wfk1, [+0.500, -0.167, +0.500], weight: 0.037->[+0.500, -0.167, +0.833] finished
translating [+0.500, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, +0.167, +0.833]
all translated
translating [+0.500, +0.167, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, +0.167, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.500, +0.167, -0.167], weight: 0.037->[+0.500, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.500, +0.167, -0.167], weight: 0.037->[+0.500, +0.167, +0.167], weight: 0.037 finished
wfk0, [+0.500, +0.167, +0.167], weight: 0.037->[+0.500, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.500, +0.167, +0.167], weight: 0.037->[+0.500, +0.167, +0.500], weight: 0.037 finished
wfk0, [+0.500, +0.167, +0.500], weight: 0.037->[+0.500, +0.167, +0.833] starting
	 0/1
wfk0, [+0.500, +0.167, +0.500], weight: 0.037->[+0.500, +0.167, +0.833] finished
wfk1, [+0.500, +0.167, -0.167], weight: 0.037->[+0.500, +0.167, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.500, +0.167, -0.167], weight: 0.037->[+0.500, +0.167, +0.167], weight: 0.037 finished
wfk1, [+0.500, +0.167, +0.167], weight: 0.037->[+0.500, +0.167, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.500, +0.167, +0.167], weight: 0.037->[+0.500, +0.167, +0.500], weight: 0.037 finished
wfk1, [+0.500, +0.167, +0.500], weight: 0.037->[+0.500, +0.167, +0.833] starting
	 0/1
wfk1, [+0.500, +0.167, +0.500], weight: 0.037->[+0.500, +0.167, +0.833] finished
translating [+0.500, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, +0.500, +0.833]
all translated
translating [+0.500, +0.500, -0.167], weight: 0.037 by gvec [0. 0. 1.] to get [+0.500, +0.500, +0.833]
all translated
string wfcs loaded
cross structure overlaps complete
wfk0, [+0.500, +0.500, -0.167], weight: 0.037->[+0.500, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk0, [+0.500, +0.500, -0.167], weight: 0.037->[+0.500, +0.500, +0.167], weight: 0.037 finished
wfk0, [+0.500, +0.500, +0.167], weight: 0.037->[+0.500, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk0, [+0.500, +0.500, +0.167], weight: 0.037->[+0.500, +0.500, +0.500], weight: 0.037 finished
wfk0, [+0.500, +0.500, +0.500], weight: 0.037->[+0.500, +0.500, +0.833] starting
	 0/1
wfk0, [+0.500, +0.500, +0.500], weight: 0.037->[+0.500, +0.500, +0.833] finished
wfk1, [+0.500, +0.500, -0.167], weight: 0.037->[+0.500, +0.500, +0.167], weight: 0.037 starting
	 0/1
wfk1, [+0.500, +0.500, -0.167], weight: 0.037->[+0.500, +0.500, +0.167], weight: 0.037 finished
wfk1, [+0.500, +0.500, +0.167], weight: 0.037->[+0.500, +0.500, +0.500], weight: 0.037 starting
	 0/1
wfk1, [+0.500, +0.500, +0.167], weight: 0.037->[+0.500, +0.500, +0.500], weight: 0.037 finished
wfk1, [+0.500, +0.500, +0.500], weight: 0.037->[+0.500, +0.500, +0.833] starting
	 0/1
wfk1, [+0.500, +0.500, +0.500], weight: 0.037->[+0.500, +0.500, +0.833] finished
time info: 0.6493110656738281 seconds to compute all overlaps
states (0, [-0.167, -0.167, -0.167]) -> (1, [-0.167, -0.167, -0.167])
min singular value: 0.825113925451922
states (1, [-0.167, -0.167, -0.167]) -> (1, [-0.167, -0.167, +0.167])
min singular value: 0.9835595155120307
states (1, [-0.167, -0.167, +0.167]) -> (0, [-0.167, -0.167, +0.167])
min singular value: 0.825113925451922
states (0, [-0.167, -0.167, +0.167]) -> (0, [-0.167, -0.167, -0.167])
min singular value: 0.983559515512068
loop eigenvalues:
[-0.03216683]
states (0, [-0.167, -0.167, +0.167]) -> (1, [-0.167, -0.167, +0.167])
min singular value: 0.825113925451922
states (1, [-0.167, -0.167, +0.167]) -> (1, [-0.167, -0.167, +0.500])
min singular value: 0.9814744912542014
states (1, [-0.167, -0.167, +0.500]) -> (0, [-0.167, -0.167, +0.500])
min singular value: 0.8239533817640654
states (0, [-0.167, -0.167, +0.500]) -> (0, [-0.167, -0.167, +0.167])
min singular value: 0.9814744912543609
loop eigenvalues:
[-0.03391786]
states (0, [-0.167, -0.167, +0.500]) -> (1, [-0.167, -0.167, +0.500])
min singular value: 0.8239533817640654
states (1, [-0.167, -0.167, +0.500]) -> (1, [-0.167, -0.167, +0.833])
min singular value: 0.9814744912542018
states (1, [-0.167, -0.167, +0.833]) -> (0, [-0.167, -0.167, +0.833])
min singular value: 0.825113925451922
states (0, [-0.167, -0.167, +0.833]) -> (0, [-0.167, -0.167, +0.500])
min singular value: 0.9814744912543607
loop eigenvalues:
[-0.03391786]
states (0, [-0.167, +0.167, -0.167]) -> (1, [-0.167, +0.167, -0.167])
min singular value: 0.825113925451922
states (1, [-0.167, +0.167, -0.167]) -> (1, [-0.167, +0.167, +0.167])
min singular value: 0.9835595155120304
states (1, [-0.167, +0.167, +0.167]) -> (0, [-0.167, +0.167, +0.167])
min singular value: 0.8251139254519215
states (0, [-0.167, +0.167, +0.167]) -> (0, [-0.167, +0.167, -0.167])
min singular value: 0.9835595155120681
loop eigenvalues:
[-0.03216683]
states (0, [-0.167, +0.167, +0.167]) -> (1, [-0.167, +0.167, +0.167])
min singular value: 0.8251139254519215
states (1, [-0.167, +0.167, +0.167]) -> (1, [-0.167, +0.167, +0.500])
min singular value: 0.9814744912542008
states (1, [-0.167, +0.167, +0.500]) -> (0, [-0.167, +0.167, +0.500])
min singular value: 0.8239533817640656
states (0, [-0.167, +0.167, +0.500]) -> (0, [-0.167, +0.167, +0.167])
min singular value: 0.9814744912543613
loop eigenvalues:
[-0.03391786]
states (0, [-0.167, +0.167, +0.500]) -> (1, [-0.167, +0.167, +0.500])
min singular value: 0.8239533817640656
states (1, [-0.167, +0.167, +0.500]) -> (1, [-0.167, +0.167, +0.833])
min singular value: 0.9814744912542015
states (1, [-0.167, +0.167, +0.833]) -> (0, [-0.167, +0.167, +0.833])
min singular value: 0.825113925451922
states (0, [-0.167, +0.167, +0.833]) -> (0, [-0.167, +0.167, +0.500])
min singular value: 0.9814744912543609
loop eigenvalues:
[-0.03391786]
states (0, [-0.167, +0.500, -0.167]) -> (1, [-0.167, +0.500, -0.167])
min singular value: 0.8257466867251538
states (1, [-0.167, +0.500, -0.167]) -> (1, [-0.167, +0.500, +0.167])
min singular value: 0.983564184663554
states (1, [-0.167, +0.500, +0.167]) -> (0, [-0.167, +0.500, +0.167])
min singular value: 0.8257466867251533
states (0, [-0.167, +0.500, +0.167]) -> (0, [-0.167, +0.500, -0.167])
min singular value: 0.9835641846635927
loop eigenvalues:
[-0.03221616]
states (0, [-0.167, +0.500, +0.167]) -> (1, [-0.167, +0.500, +0.167])
min singular value: 0.8257466867251533
states (1, [-0.167, +0.500, +0.167]) -> (1, [-0.167, +0.500, +0.500])
min singular value: 0.9816732097440629
states (1, [-0.167, +0.500, +0.500]) -> (0, [-0.167, +0.500, +0.500])
min singular value: 0.8229269720136702
states (0, [-0.167, +0.500, +0.500]) -> (0, [-0.167, +0.500, +0.167])
min singular value: 0.9816732097441545
loop eigenvalues:
[-0.03389327]
states (0, [-0.167, +0.500, +0.500]) -> (1, [-0.167, +0.500, +0.500])
min singular value: 0.8229269720136702
states (1, [-0.167, +0.500, +0.500]) -> (1, [-0.167, +0.500, +0.833])
min singular value: 0.9816732097440634
states (1, [-0.167, +0.500, +0.833]) -> (0, [-0.167, +0.500, +0.833])
min singular value: 0.8257466867251538
states (0, [-0.167, +0.500, +0.833]) -> (0, [-0.167, +0.500, +0.500])
min singular value: 0.9816732097441548
loop eigenvalues:
[-0.03389327]
states (0, [+0.167, -0.167, -0.167]) -> (1, [+0.167, -0.167, -0.167])
min singular value: 0.8251139254519221
states (1, [+0.167, -0.167, -0.167]) -> (1, [+0.167, -0.167, +0.167])
min singular value: 0.9835595155120307
states (1, [+0.167, -0.167, +0.167]) -> (0, [+0.167, -0.167, +0.167])
min singular value: 0.825113925451922
states (0, [+0.167, -0.167, +0.167]) -> (0, [+0.167, -0.167, -0.167])
min singular value: 0.9835595155120678
loop eigenvalues:
[-0.03216683]
states (0, [+0.167, -0.167, +0.167]) -> (1, [+0.167, -0.167, +0.167])
min singular value: 0.825113925451922
states (1, [+0.167, -0.167, +0.167]) -> (1, [+0.167, -0.167, +0.500])
min singular value: 0.9814744912542017
states (1, [+0.167, -0.167, +0.500]) -> (0, [+0.167, -0.167, +0.500])
min singular value: 0.8239533817640656
states (0, [+0.167, -0.167, +0.500]) -> (0, [+0.167, -0.167, +0.167])
min singular value: 0.9814744912543606
loop eigenvalues:
[-0.03391786]
states (0, [+0.167, -0.167, +0.500]) -> (1, [+0.167, -0.167, +0.500])
min singular value: 0.8239533817640656
states (1, [+0.167, -0.167, +0.500]) -> (1, [+0.167, -0.167, +0.833])
min singular value: 0.9814744912542012
states (1, [+0.167, -0.167, +0.833]) -> (0, [+0.167, -0.167, +0.833])
min singular value: 0.8251139254519221
states (0, [+0.167, -0.167, +0.833]) -> (0, [+0.167, -0.167, +0.500])
min singular value: 0.9814744912543611
loop eigenvalues:
[-0.03391786]
states (0, [+0.167, +0.167, -0.167]) -> (1, [+0.167, +0.167, -0.167])
min singular value: 0.8251139254519222
states (1, [+0.167, +0.167, -0.167]) -> (1, [+0.167, +0.167, +0.167])
min singular value: 0.9835595155120306
states (1, [+0.167, +0.167, +0.167]) -> (0, [+0.167, +0.167, +0.167])
min singular value: 0.825113925451922
states (0, [+0.167, +0.167, +0.167]) -> (0, [+0.167, +0.167, -0.167])
min singular value: 0.9835595155120684
loop eigenvalues:
[-0.03216683]
states (0, [+0.167, +0.167, +0.167]) -> (1, [+0.167, +0.167, +0.167])
min singular value: 0.825113925451922
states (1, [+0.167, +0.167, +0.167]) -> (1, [+0.167, +0.167, +0.500])
min singular value: 0.9814744912542015
states (1, [+0.167, +0.167, +0.500]) -> (0, [+0.167, +0.167, +0.500])
min singular value: 0.8239533817640656
states (0, [+0.167, +0.167, +0.500]) -> (0, [+0.167, +0.167, +0.167])
min singular value: 0.9814744912543607
loop eigenvalues:
[-0.03391786]
states (0, [+0.167, +0.167, +0.500]) -> (1, [+0.167, +0.167, +0.500])
min singular value: 0.8239533817640656
states (1, [+0.167, +0.167, +0.500]) -> (1, [+0.167, +0.167, +0.833])
min singular value: 0.9814744912542014
states (1, [+0.167, +0.167, +0.833]) -> (0, [+0.167, +0.167, +0.833])
min singular value: 0.8251139254519222
states (0, [+0.167, +0.167, +0.833]) -> (0, [+0.167, +0.167, +0.500])
min singular value: 0.9814744912543613
loop eigenvalues:
[-0.03391786]
states (0, [+0.167, +0.500, -0.167]) -> (1, [+0.167, +0.500, -0.167])
min singular value: 0.8257466867251531
states (1, [+0.167, +0.500, -0.167]) -> (1, [+0.167, +0.500, +0.167])
min singular value: 0.983564184663554
states (1, [+0.167, +0.500, +0.167]) -> (0, [+0.167, +0.500, +0.167])
min singular value: 0.8257466867251539
states (0, [+0.167, +0.500, +0.167]) -> (0, [+0.167, +0.500, -0.167])
min singular value: 0.9835641846635929
loop eigenvalues:
[-0.03221616]
states (0, [+0.167, +0.500, +0.167]) -> (1, [+0.167, +0.500, +0.167])
min singular value: 0.8257466867251539
states (1, [+0.167, +0.500, +0.167]) -> (1, [+0.167, +0.500, +0.500])
min singular value: 0.9816732097440635
states (1, [+0.167, +0.500, +0.500]) -> (0, [+0.167, +0.500, +0.500])
min singular value: 0.8229269720136705
states (0, [+0.167, +0.500, +0.500]) -> (0, [+0.167, +0.500, +0.167])
min singular value: 0.9816732097441554
loop eigenvalues:
[-0.03389327]
states (0, [+0.167, +0.500, +0.500]) -> (1, [+0.167, +0.500, +0.500])
min singular value: 0.8229269720136705
states (1, [+0.167, +0.500, +0.500]) -> (1, [+0.167, +0.500, +0.833])
min singular value: 0.9816732097440632
states (1, [+0.167, +0.500, +0.833]) -> (0, [+0.167, +0.500, +0.833])
min singular value: 0.8257466867251531
states (0, [+0.167, +0.500, +0.833]) -> (0, [+0.167, +0.500, +0.500])
min singular value: 0.9816732097441548
loop eigenvalues:
[-0.03389327]
states (0, [+0.500, -0.167, -0.167]) -> (1, [+0.500, -0.167, -0.167])
min singular value: 0.8257466867251227
states (1, [+0.500, -0.167, -0.167]) -> (1, [+0.500, -0.167, +0.167])
min singular value: 0.9835641846635576
states (1, [+0.500, -0.167, +0.167]) -> (0, [+0.500, -0.167, +0.167])
min singular value: 0.8257466867251227
states (0, [+0.500, -0.167, +0.167]) -> (0, [+0.500, -0.167, -0.167])
min singular value: 0.9835641846635985
loop eigenvalues:
[-0.03221616]
states (0, [+0.500, -0.167, +0.167]) -> (1, [+0.500, -0.167, +0.167])
min singular value: 0.8257466867251227
states (1, [+0.500, -0.167, +0.167]) -> (1, [+0.500, -0.167, +0.500])
min singular value: 0.9816732097440687
states (1, [+0.500, -0.167, +0.500]) -> (0, [+0.500, -0.167, +0.500])
min singular value: 0.8229269720136555
states (0, [+0.500, -0.167, +0.500]) -> (0, [+0.500, -0.167, +0.167])
min singular value: 0.9816732097441615
loop eigenvalues:
[-0.03389327]
states (0, [+0.500, -0.167, +0.500]) -> (1, [+0.500, -0.167, +0.500])
min singular value: 0.8229269720136555
states (1, [+0.500, -0.167, +0.500]) -> (1, [+0.500, -0.167, +0.833])
min singular value: 0.9816732097440687
states (1, [+0.500, -0.167, +0.833]) -> (0, [+0.500, -0.167, +0.833])
min singular value: 0.8257466867251227
states (0, [+0.500, -0.167, +0.833]) -> (0, [+0.500, -0.167, +0.500])
min singular value: 0.9816732097441615
loop eigenvalues:
[-0.03389327]
states (0, [+0.500, +0.167, -0.167]) -> (1, [+0.500, +0.167, -0.167])
min singular value: 0.8257466867251225
states (1, [+0.500, +0.167, -0.167]) -> (1, [+0.500, +0.167, +0.167])
min singular value: 0.9835641846635576
states (1, [+0.500, +0.167, +0.167]) -> (0, [+0.500, +0.167, +0.167])
min singular value: 0.8257466867251227
states (0, [+0.500, +0.167, +0.167]) -> (0, [+0.500, +0.167, -0.167])
min singular value: 0.9835641846635985
loop eigenvalues:
[-0.03221616]
states (0, [+0.500, +0.167, +0.167]) -> (1, [+0.500, +0.167, +0.167])
min singular value: 0.8257466867251227
states (1, [+0.500, +0.167, +0.167]) -> (1, [+0.500, +0.167, +0.500])
min singular value: 0.9816732097440687
states (1, [+0.500, +0.167, +0.500]) -> (0, [+0.500, +0.167, +0.500])
min singular value: 0.8229269720136559
states (0, [+0.500, +0.167, +0.500]) -> (0, [+0.500, +0.167, +0.167])
min singular value: 0.9816732097441623
loop eigenvalues:
[-0.03389327]
states (0, [+0.500, +0.167, +0.500]) -> (1, [+0.500, +0.167, +0.500])
min singular value: 0.8229269720136559
states (1, [+0.500, +0.167, +0.500]) -> (1, [+0.500, +0.167, +0.833])
min singular value: 0.9816732097440684
states (1, [+0.500, +0.167, +0.833]) -> (0, [+0.500, +0.167, +0.833])
min singular value: 0.8257466867251225
states (0, [+0.500, +0.167, +0.833]) -> (0, [+0.500, +0.167, +0.500])
min singular value: 0.9816732097441617
loop eigenvalues:
[-0.03389327]
states (0, [+0.500, +0.500, -0.167]) -> (1, [+0.500, +0.500, -0.167])
min singular value: 0.8250329484255554
states (1, [+0.500, +0.500, -0.167]) -> (1, [+0.500, +0.500, +0.167])
min singular value: 0.9833441149999228
states (1, [+0.500, +0.500, +0.167]) -> (0, [+0.500, +0.500, +0.167])
min singular value: 0.8250329484255556
states (0, [+0.500, +0.500, +0.167]) -> (0, [+0.500, +0.500, -0.167])
min singular value: 0.9833441149999066
loop eigenvalues:
[-0.03245374]
states (0, [+0.500, +0.500, +0.167]) -> (1, [+0.500, +0.500, +0.167])
min singular value: 0.8250329484255556
states (1, [+0.500, +0.500, +0.167]) -> (1, [+0.500, +0.500, +0.500])
min singular value: 0.982134838344408
states (1, [+0.500, +0.500, +0.500]) -> (0, [+0.500, +0.500, +0.500])
min singular value: 0.8207578325496556
states (0, [+0.500, +0.500, +0.500]) -> (0, [+0.500, +0.500, +0.167])
min singular value: 0.9821348383445011
loop eigenvalues:
[-0.03377462]
states (0, [+0.500, +0.500, +0.500]) -> (1, [+0.500, +0.500, +0.500])
min singular value: 0.8207578325496556
states (1, [+0.500, +0.500, +0.500]) -> (1, [+0.500, +0.500, +0.833])
min singular value: 0.9821348383444075
states (1, [+0.500, +0.500, +0.833]) -> (0, [+0.500, +0.500, +0.833])
min singular value: 0.8250329484255554
states (0, [+0.500, +0.500, +0.833]) -> (0, [+0.500, +0.500, +0.500])
min singular value: 0.9821348383445012
loop eigenvalues:
[-0.03377462]
time info: 0.07721948623657227 seconds to do all svds
-0.16666666666666682, -0.16666666666666682: -0.1000025505770616
-0.16666666666666682, 0.16666666666666666: -0.10000255057706159
-0.16666666666666682, 0.5: -0.10000270183938298
0.16666666666666666, -0.16666666666666682: -0.10000255057706159
0.16666666666666666, 0.16666666666666666: -0.10000255057706159
0.16666666666666666, 0.5: -0.10000270183938295
0.5, -0.16666666666666682: -0.10000270183938297
0.5, 0.16666666666666666: -0.10000270183938295
0.5, 0.5: -0.10000296750950964
average across strings: -0.10000266413058755
Finding ionic change in polarization
Displacements:
[[0.  0.  0.4]]
He	2.0	[0.  0.  0.4]
Electronic phase change: [0.0, 0.0, -0.2000053282611751]
Electronic polarization change: [ 0.         0.        -0.2002775]
Ionic polarization change: [0.         0.         0.20027217]
Final polarization = [ 0.00000000e+00  0.00000000e+00 -2.66775602e-06] C/m^2
time info: 1.1829376220703125 seconds total
